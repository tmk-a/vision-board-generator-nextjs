import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import PublicLayout from "@/components/layout/PublicLayout";
import LoggedInLayout from "@/components/layout/LoggedInLayout";
import { getAuthenticatedUser } from "./(auth)/action";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Vision Board Generator",
  description: "Generated by Vision Board Generator",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // confirm user login status
  const user = await getAuthenticatedUser();
  const isAuthenticated = !!user;

  if (isAuthenticated) {
    return (
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <LoggedInLayout>{children}</LoggedInLayout>
        </body>
      </html>
    );
  } else {
    return (
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <PublicLayout>{children}</PublicLayout>
        </body>
      </html>
    );
  }
}
